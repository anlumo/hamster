eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"hamster/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var App;\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    App = Ember.Application.extend({\n      modulePrefix: \'hamster\',\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'hamster\');\n\n    window.Hub = Ember.Object.create({\n      init: function() {\n        return this.set(\'HUB\', Ember.Object.createWithMixins(Ember.Evented, {}));\n      },\n      publish: function() {\n        var hub;\n        hub = this.get(\'HUB\');\n        return hub.trigger.apply(hub, arguments);\n      },\n      subscribe: function() {\n        var hub;\n        hub = this.get(\'HUB\');\n        return hub.on.apply(hub, arguments);\n      },\n      unsubscribe: function() {\n        var hub;\n        hub = this.get(\'HUB\');\n        return hub.off.apply(hub, arguments);\n      }\n    });\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=hamster/app.js");

;eval("define(\"hamster/components/ace-editor\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var AceEditorComponent;\n\n    AceEditorComponent = Ember.Component.extend({\n      classNames: [\'editor\'],\n      readonly: false,\n      highlightRange: null,\n      cursorPosition: (function(key, val) {\n        if (!this.editor) {\n          return {\n            row: 0,\n            column: 0\n          };\n        }\n        if (arguments.length === 1) {\n          return this.editor.selection.getCursor();\n        }\n        this.editor.selection.clearSelection();\n        this.editor.selection.moveCursorToPosition(val);\n        this.editor.focus();\n        return val;\n      }).property(),\n      selection: (function(key, val) {\n        if (!this.editor) {\n          return {};\n        }\n        if (arguments.length === 1) {\n          return this.editor.selection.getRange();\n        }\n        this.editor.selection.setSelectionRange(val, true);\n        this.editor.focus();\n        return val;\n      }).property(),\n      content: (function(key, val) {\n        var cursor;\n        if (!this.editor) {\n          this.preset = val;\n          return val;\n        }\n        if (arguments.length === 1) {\n          return this.editor.getSession().getValue();\n        }\n        cursor = this.editor.getCursorPosition();\n        this.editor.getSession().setValue(val);\n        this.editor.moveCursorToPosition(cursor);\n        return val;\n      }).property(),\n      didInsertElement: function() {\n        this.editor = window.ace.edit(this.elementId);\n        this.editor.getSession().setMode(\'ace/mode/javascript\');\n        this.editor.setShowPrintMargin(false);\n        this.editor.setHighlightActiveLine(true);\n        this.editor.getSession().setUseWrapMode(true);\n        this.editor.on(\'change\', (function(_this) {\n          return function() {\n            return _this.notifyPropertyChange(\'content\');\n          };\n        })(this));\n        this.editor.getSession().selection.on(\'changeCursor\', (function(_this) {\n          return function() {\n            return _this.notifyPropertyChange(\'cursorPosition\');\n          };\n        })(this));\n        this.editor.getSession().selection.on(\'changeSelection\', (function(_this) {\n          return function() {\n            return _this.notifyPropertyChange(\'selection\');\n          };\n        })(this));\n        if (this.preset) {\n          this.set(\'content\', this.preset);\n          this.preset = null;\n          this.resizeView();\n        }\n        return this.editor.focus();\n      },\n      resizeView: (function() {\n        var newHeight, renderer;\n        renderer = this.editor.renderer;\n        newHeight = this.editor.getSession().getScreenLength() * renderer.lineHeight + renderer.scrollBar.getWidth();\n        newHeight = Math.max(newHeight, 200);\n        Ember.$(\"#\" + this.elementId).css(\'min-height\', newHeight.toString() + \"px\");\n        return this.editor.resize();\n      }).observes(\'content\'),\n      oldHighlightLine: null,\n      updateHighlightRange: (function() {\n        var highlightRange;\n        if (this.oldHighlightLine !== null) {\n          this.editor.getSession().removeGutterDecoration(this.oldHighlightLine, \"currentLine\");\n        }\n        highlightRange = this.get(\'highlightRange\');\n        if (highlightRange) {\n          this.editor.getSession().addGutterDecoration(highlightRange.start.row, \"currentLine\");\n          return this.oldHighlightLine = highlightRange.start.row;\n        } else {\n          return this.oldHighlightLine = null;\n        }\n      }).observes(\'highlightRange\'),\n      readonlyChanged: (function() {\n        var readonly;\n        readonly = this.get(\'readonly\');\n        this.editor.setReadOnly(readonly);\n        if (readonly) {\n          return Ember.$(\'.ace_content\').css(\'background-color\', \'#ddd\');\n        } else {\n          return Ember.$(\'.ace_content\').css(\'background-color\', \'white\');\n        }\n      }).observes(\'readonly\')\n    });\n\n    __exports__[\"default\"] = AceEditorComponent;\n  });//# sourceURL=hamster/components/ace-editor.js");

;eval("define(\"hamster/components/split-child\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      splitPercentage: Ember.computed.alias(\'parentView.splitPercentage\'),\n      sashWidthPercentage: Ember.computed.alias(\'parentView.sash.widthPercentage\'),\n      isVertical: Ember.computed.alias(\'parentView.isVertical\'),\n      \n      childSplitView: null,\n      fixedSide: null,\n      movableSide: null,\n\n      didInsertElement: function() {\n        this.$().css(\"position\", \"absolute\");\n        this.updateSize();\n        this.get(\'parentView\').addChildView(this);\n      },\n\n      initChildSplitView: function() {\n        this.updateChildSplitView();\n      }.observes(\'childSplitView\'),\n\n      updateSize: function() {\n        if(this.get(\'isVertical\')) {\n          this.$().css(\"height\", \"100%\");\n        } else {\n          this.$().css(\"width\", \"100%\");\n        }\n      }.observes(\'isVertical\'),\n\n      updateFixedSide: function() {\n        this.$().css(this.get(\'fixedSide\'), \"0\");\n      }.observes(\'fixedSide\'),\n\n      updateMovableSide: function() {\n        var percent;\n\n        if(this.get(\'movableSide\') === \"left\" || this.get(\'movableSide\') === \"top\") {\n          percent = this.get(\'splitPercentage\') + this.get(\'sashWidthPercentage\') / 2;\n        } else {\n          percent = 100 - this.get(\'splitPercentage\') + this.get(\'sashWidthPercentage\') / 2;\n        }\n\n        this.$().css(this.get(\'movableSide\'), percent + \"%\");\n        this.updateChildSplitView();\n      }.observes(\'sashWidthPercentage\', \'splitPercentage\', \'movableSide\'),\n\n      updateChildSplitView: function() {\n        var childSplit = this.get(\'childSplitView\');\n\n        if(childSplit) {\n          childSplit.set(\'width\', this.$().width());\n          childSplit.set(\'height\', this.$().height());\n        }\n      }\n    });\n  });//# sourceURL=hamster/components/split-child.js");

;eval("define(\"hamster/components/split-sash\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    /**\n     * This view represents the divider between two views enclosed in a SplitView.\n     * The sash can be dragged to change the size of one vew relative to the other \n     * on either side of the sash.  The sash can be either horizontal or vertical.\n     * The parentView of the sash must be a SplitView\n     *\n     * @cLass SplitSashComponent\n     * @extends Ember.View\n     */\n    __exports__[\"default\"] = Ember.Component.extend({\n      width: 6,\n      widthPercentage: null,\n      isVertical: Ember.computed.alias(\'parentView.isVertical\'),\n      isDragging: Ember.computed.alias(\'parentView.isDragging\'),\n      splitPercentage: Ember.computed.alias(\'parentView.splitPercentage\'),  \n\n      /**\n       * @property {string} sashBackgroundColor - the color of the sash when dragging\n       * @default black\n       */\n      sashBackgroundColor: \"black\",\n\n        /**\n       * @property {number} sashOpacity - the background opacity of the sash when dragging\n       * @default 0.1\n       */\n      opacity: 0.1,\n\n      didInsertElement: function() {\n        this.set(\'parentView.sash\', this);\n        this.$().css(\"z-index\", \"9999\");\n        this.$().css(\"position\", \"absolute\");\n        this.$().css(\"opacity\", this.get(\'opacity\'));\n\n        this.updateWidth();\n        this.updatePosition();\n        this.updateOrientation();\n      },\n\n      updatePosition: function() {\n        if(this.get(\'isVertical\')) {\n          this.$().css(\"left\", (this.get(\'splitPercentage\') - this.get(\'widthPercentage\') / 2) + \"%\");\n        } else {\n          this.$().css(\"top\", (this.get(\'splitPercentage\') - this.get(\'widthPercentage\') / 2) + \"%\");\n        }\n      }.observes(\'splitPercentage\', \'widthPercentage\', \'isVertical\'),\n\n      updateWidth: function() {\n        if(this.get(\'isVertical\')) {\n          this.set(\'widthPercentage\', this.get(\'width\') / this.get(\'parentView.width\') * 100);\n        } else {\n          this.set(\'widthPercentage\', this.get(\'width\') / this.get(\'parentView.height\') * 100);     \n        }\n      }.observes(\'isVertical\', \'width\', \'parentView.width\', \'parentView.height\'),\n\n      updateOrientation: function() {\n        if(this.get(\'isVertical\')) {\n          this.$().width(this.get(\'width\') + \"px\");\n          this.$().height(\"100%\");\n          this.$().css(\"cursor\", \"ew-resize\");\n        } else {\n          this.$().width(\"100%\");\n          this.$().height(this.get(\'width\') + \"px\");\n          this.$().css(\"cursor\", \"ns-resize\");\n        }\n      }.observes(\'isVertical\', \'width\'),\n\n      updateBackground: function() {\n        if(this.get(\'parentView.isDragging\')) {\n          this.$().css(\"background-color\", this.get(\'sashBackgroundColor\'));\n        } else {\n          this.$().css(\"background-color\", \"transparent\");\n        }\n      }.observes(\'isDragging\'),\n\n      mouseDown: function(event) {\n        this.set(\'isDragging\', true);\n        event.preventDefault();\n      }\n    });\n  });//# sourceURL=hamster/components/split-sash.js");

;eval("define(\"hamster/components/split-view\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    /**\n     * This class represents a view that is split either vertically or horizontally.\n     * The split view is composed of three child views: a left or top view, a sash\n     * view, and a right or bottom view.  The sash may be dragged to change the\n     * relative width or height of the child views.\n     *\n     * Vertical SplitView example:\n     *\n     * ```handlebars\n     * {{#split-view isVertical=true}}\n     *   {{#split-child}}\n     *     Content of the left view here.\n     *   {{/split-child}}\n     *   {{split-sash\"}}\n     *   {{#split-child}}\n     *     Content of the right view here.\n     *   {{/split-child}}\n     * {{/split-view}}\n     * ```\n     *\n     * Horizontal SplitView example:\n     *\n     * ```handlebars\n     * {{#split-view isVertical=false}}\n     *   {{#split-child}}\n     *     Content of the left view here.\n     *   {{/split-child}}\n     *   {{split-sash\"}}\n     *   {{#split-child}}\n     *     Content of the right view here.\n     *   {{/split-child}}\n     * {{/split-view}}\n     * ```\n     * \n     * @cLass SplitViewComponent\n     * @extends Ember.Component\n     */\n    __exports__[\"default\"] = Ember.Component.extend({\n      /**\n       * @property {boolean} isVertical - the orientation of the split: true = vertical, false = horizontal\n       * @default true\n       */\n      isVertical: true,\n        \n      /**\n       * @property {Number} splitPercentage - the percentage of the split between 0 and 100\n       * @default 50\n       */\n      splitPercentage: 50,\n\n      childViews: null,\n      isDragging: false,\n      width: 0,\n      height: 0,\n\n      didInsertElement: function(){\n        this.set(\'parentView.childSplitView\', this);\n        this.set(\'width\', this.$().width());\n        this.set(\'height\', this.$().height());\n        this.set(\'childViews\', Ember.A());\n      },\n\n      addChildView: function(child) {\n        this.get(\'childViews\').addObject(child);\n\n        if(this.get(\'childViews\').length === 2) {\n          this.updateOrientation();\n        }\n      },\n\n      updateOrientation: function() {\n        var leftOrTop = this.get(\'childViews\').objectAt(0);\n        var rightOrBottom = this.get(\'childViews\').objectAt(1);\n\n        if(this.get(\'isVertical\')) {\n          leftOrTop.set(\'fixedSide\', \'left\');\n          leftOrTop.set(\'movableSide\', \'right\');\n          rightOrBottom.set(\'fixedSide\', \'right\');\n          rightOrBottom.set(\'movableSide\', \'left\');\n        } else {\n          leftOrTop.set(\'fixedSide\', \'top\');\n          leftOrTop.set(\'movableSide\', \'bottom\');\n          rightOrBottom.set(\'fixedSide\', \'bottom\');\n          rightOrBottom.set(\'movableSide\', \'top\');\n        }\n      }.observes(\'isVertical\'),\n\n      updateWidth: function() {\n        this.$().width(this.get(\'width\'));\n      }.observes(\'width\'),\n\n      updateHeight: function() {\n        this.$().height(this.get(\'height\'));\n      }.observes(\'height\'),\n\n      constrainSplit: function() {\n        var leftOrTop = this.get(\'childViews\').objectAt(0);\n        var rightOrBottom = this.get(\'childViews\').objectAt(1);\n\n        if(leftOrTop) {\n          var minLeftOrTopPercentage = this.minChildPercentage(leftOrTop);\n\n          if(this.get(\'splitPercentage\') < minLeftOrTopPercentage) {\n            this.set(\'splitPercentage\', minLeftOrTopPercentage);\n          }\n        }\n        \n        if (rightOrBottom) {\n          var minRightOrBottomPercentage = 100 - this.minChildPercentage(rightOrBottom);\n\n          if(this.get(\'splitPercentage\') > minRightOrBottomPercentage) {\n            this.set(\'splitPercentage\', minRightOrBottomPercentage);\n          }\n        } \n      }.observes(\'sash.widthPercentage\'),\n\n      mouseUp: function() {\n        this.set(\'isDragging\', false);\n      },\n\n      mouseMove: function(event) {\n        if(!this.get(\'isDragging\')) {\n          return;\n        }\n\n        var posInParent;\n        var percentage;\n\n        if(this.get(\'isVertical\')) {\n          posInParent = event.pageX - this.$().offset().left;\n          percentage = posInParent / this.$().width() * 100;\n        } else {\n          posInParent = event.pageY - this.$().offset().top;\n          percentage = posInParent / this.$().height() * 100;\n        }\n\n        this.set(\'splitPercentage\', percentage);\n        this.constrainSplit();\n      },\n\n      minChildPercentage: function(view) {\n        if(this.get(\'isVertical\')) {\n          return parseInt(view.$().css(\"min-width\")) / this.$().width() * 100 + this.get(\'sash.widthPercentage\') / 2;\n        } else {\n          return parseInt(view.$().css(\"min-height\")) / this.$().height() * 100 + this.get(\'sash.widthPercentage\') / 2;\n        }\n      }\n    });\n  });//# sourceURL=hamster/components/split-view.js");

;eval("define(\"hamster/controllers/console\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ConsoleController;\n\n    ConsoleController = Ember.Controller.extend({\n      setupDone: false,\n      setup: function() {\n        Ember.run.next(function() {\n          var consoleElement;\n          consoleElement = Ember.$(\'.consoleScroller\');\n          return consoleElement.scrollTop(consoleElement.prop(\'scrollHeight\'));\n        });\n        if (this.setupDone) {\n          return;\n        }\n        this.setupDone = true;\n        return window.Hub.subscribe(\'logHTML\', this, this.logHTML);\n      },\n      logHTML: function(line) {\n        var consoleElement, isScrolledBottom, logLines;\n        logLines = this.get(\'model.logLines\');\n        consoleElement = Ember.$(\'.consoleScroller\');\n        isScrolledBottom = Math.abs(consoleElement.scrollTop() + consoleElement.innerHeight() - consoleElement[0].scrollHeight) < 4;\n        logLines.pushObject(line);\n        localStorage.setItem(\'logLines\', JSON.stringify(logLines));\n        if (isScrolledBottom) {\n          return Ember.run.next(function() {\n            return consoleElement.scrollTop(consoleElement.prop(\'scrollHeight\'));\n          });\n        }\n      }\n    });\n\n    __exports__[\"default\"] = ConsoleController;\n  });//# sourceURL=hamster/controllers/console.js");

;eval("define(\"hamster/controllers/editor\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var EditorController;\n\n    EditorController = Ember.Controller.extend({\n      setupDone: false,\n      setup: function() {\n        var context, scope;\n        if (this.setupDone) {\n          return;\n        }\n        this.setupDone = true;\n        scope = {\n          schreib: function(text) {\n            return window.Hub.publish(\'logHTML\', text.toString().replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\n/g, \"<br>\"));\n          },\n          vor: function() {\n            return window.Hub.publish(\'hamsterForward\');\n          },\n          linksUm: function() {\n            return window.Hub.publish(\'hamsterTurnLeft\');\n          },\n          rechtsUm: function() {\n            return window.Hub.publish(\'hamsterTurnRight\');\n          },\n          nimm: function() {\n            return window.Hub.publish(\'hamsterPickUp\');\n          },\n          gib: function() {\n            return window.Hub.publish(\'hamsterGive\');\n          },\n          vorneFrei: function() {\n            var result;\n            result = false;\n            window.Hub.publish(\'hamsterCanMoveForward\', function(can) {\n              return result = can;\n            });\n            return result;\n          },\n          kornDa: function() {\n            var result;\n            result = false;\n            window.Hub.publish(\'hamsterHasCorn\', function(has) {\n              return result = has;\n            });\n            return result;\n          },\n          maulLeer: (function(_this) {\n            return function() {\n              return _this.get(\'model.playfield.carryCorn\') === 0;\n            };\n          })(this)\n        };\n        context = window.require(\'debugjs\').createDebugger({\n          sandbox: scope\n        });\n        context.machine.on(\'error\', (function(_this) {\n          return function(e) {\n            var location;\n            location = context.getCurrentLoc();\n            if (location) {\n              _this.set(\'selection\', {\n                start: {\n                  column: location.start.column,\n                  row: location.start.line - 1\n                },\n                end: {\n                  column: location.end.column,\n                  row: location.end.line - 1\n                }\n              });\n              return window.Hub.publish(\'logHTML\', \'<span class=\"error\">Error in line \' + location.start.line + \': <em>\' + e.message.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\n/g, \"<br>\") + \'</em></span>\');\n            } else {\n              return window.Hub.publish(\'logHTML\', \'<span class=\"error\">Error: <em>\' + e.message.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\n/g, \"<br>\") + \'</em></span>\');\n            }\n          };\n        })(this));\n        this.set(\'context\', context);\n        window.Hub.subscribe(\'play\', this, this.play);\n        window.Hub.subscribe(\'pause\', this, this.pause);\n        window.Hub.subscribe(\'stop\', this, this.stop);\n        window.Hub.subscribe(\'stepIn\', this, this.stepIn);\n        return window.Hub.subscribe(\'stepOver\', this, this.stepOver);\n      },\n      runSpeedChanged: (function() {\n        return localStorage.setItem(\'runSpeed\', this.get(\'model.runSpeed\'));\n      }).observes(\'model.runSpeed\'),\n      highlightLine: null,\n      running: false,\n      updateVariables: function() {\n        var frame, obj, scope, stack, value, variables, _i, _len;\n        stack = this.context.getCallStack();\n        frame = stack[stack.length - 1];\n        scope = frame.scope;\n        variables = Ember.A();\n        for (_i = 0, _len = scope.length; _i < _len; _i++) {\n          obj = scope[_i];\n          value = frame.evalInScope(obj.name);\n          variables.push({\n            name: obj.name,\n            description: JSON.stringify(value)\n          });\n        }\n        return this.get(\'model\').set(\'variables\', variables);\n      },\n      playModeTimer: null,\n      play: function() {\n        var context, timer;\n        context = this.get(\'context\');\n        this.get(\'model\').set(\'playMode\', true);\n        timer = (function(_this) {\n          return function() {\n            _this.stepIn();\n            if (!context.machine.halted) {\n              return _this.playModeTimer = Ember.run.later(_this, timer, _this.get(\'model.runSpeed\'));\n            } else {\n              return _this.get(\'model\').set(\'playMode\', false);\n            }\n          };\n        })(this);\n        return timer();\n      },\n      pause: function() {\n        if (this.playModeTimer) {\n          Ember.run.cancel(this.playModeTimer);\n          return this.get(\'model\').set(\'playMode\', false);\n        }\n      },\n      stop: function() {\n        var context;\n        context = this.get(\'context\');\n        this.set(\'running\', false);\n        this.get(\'model\').set(\'playMode\', false);\n        this.set(\'highlightRange\', null);\n        if (this.playModeTimer) {\n          return Ember.run.cancel(this.playModeTimer);\n        }\n      },\n      step: function(type) {\n        var context, location, running, text;\n        context = this.get(\'context\');\n        try {\n          if (this.get(\'running\')) {\n            return context[type]();\n          } else {\n            text = this.get(\'model.scratchpad\');\n            context.load(text, \'scratchpad.js\');\n            return context.machine.step();\n          }\n        } finally {\n          running = !context.machine.halted;\n          this.set(\'running\', running);\n          if (running) {\n            location = context.machine.getCurrentLoc();\n            this.set(\'highlightRange\', {\n              start: {\n                column: location.start.column,\n                row: location.start.line - 1\n              },\n              end: {\n                column: location.end.column,\n                row: location.end.line - 1\n              }\n            });\n          } else {\n            this.set(\'highlightRange\', null);\n          }\n          this.updateVariables();\n        }\n      },\n      stepIn: function() {\n        return this.step(\"stepIn\");\n      },\n      stepOver: function() {\n        return this.step(\"stepOver\");\n      }\n    });\n\n    __exports__[\"default\"] = EditorController;\n  });//# sourceURL=hamster/controllers/editor.js");

;eval("define(\"hamster/controllers/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var IndexController;\n\n    IndexController = Ember.Controller.extend({\n      init: function() {\n        var template;\n        template = localStorage.getItem(\'selectedTemplate\');\n        return this.set(\'selectedTemplate\', JSON.parse(template));\n      },\n      scratchpadChanged: (function() {\n        return localStorage.setItem(\'scratchpad\', this.get(\'model.scratchpad\'));\n      }).observes(\'model.scratchpad\'),\n      selectedTemplate: null,\n      gridChanged: (function() {\n        return localStorage.setItem(\'grid\', this.get(\'model.playfield.grid\').join(\'\\n\'));\n      }).observes(\'model.playfield.grid\'),\n      carryCornChanged: (function() {\n        return localStorage.setItem(\'carryCorn\', this.get(\'model.playfield.carryCorn\'));\n      }).observes(\'model.playfield.carryCorn\'),\n      hamsterLocationChanged: (function() {\n        return localStorage.setItem(\'hamsterLocation\', this.get(\'model.playfield.hamsterLocation\').join(\',\'));\n      }).observes(\'model.playfield.hamsterLocation\'),\n      mainSplitviewChanged: (function() {\n        return localStorage.setItem(\'mainSplitview\', this.get(\'model.mainSplitview\'));\n      }).observes(\'model.mainSplitview\'),\n      editorSplitviewChanged: (function() {\n        return localStorage.setItem(\'editorSplitview\', this.get(\'model.editorSplitview\'));\n      }).observes(\'model.editorSplitview\'),\n      playfieldSplitviewChanged: (function() {\n        return localStorage.setItem(\'playfieldSplitview\', this.get(\'model.playfieldSplitview\'));\n      }).observes(\'model.playfieldSplitview\'),\n      saveDialogButtons: [\n        Ember.Object.create({\n          title: \'Save\',\n          clicked: \'saveDocument\',\n          dismiss: \'modal\',\n          type: \'primary\'\n        }), Ember.Object.create({\n          title: \'Cancel\',\n          dismiss: \'modal\'\n        })\n      ],\n      actions: {\n        play: function() {\n          return window.Hub.publish(\'play\');\n        },\n        pause: function() {\n          return window.Hub.publish(\'pause\');\n        },\n        reset: function() {\n          this.get(\'model\').set(\'playfield\', Ember.Object.create(Ember.copy(this.get(\'selectedTemplate\'), true)));\n          return window.Hub.publish(\'stop\');\n        },\n        stepIn: function() {\n          return window.Hub.publish(\'stepIn\');\n        },\n        stepOver: function() {\n          return window.Hub.publish(\'stepOver\');\n        },\n        rotate: function() {\n          return window.Hub.publish(\'hamsterTurnLeft\');\n        },\n        clearConsole: function() {\n          return this.get(\'model\').set(\'logLines\', Ember.A());\n        },\n        selectTemplate: function(template) {\n          localStorage.setItem(\'selectedTemplate\', JSON.stringify(template));\n          this.set(\'selectedTemplate\', template);\n          return this.get(\'model\').set(\'playfield\', Ember.Object.create(Ember.copy(template, true)));\n        },\n        addCorn: function() {\n          return this.get(\'model.playfield\').incrementProperty(\'carryCorn\');\n        },\n        removeCorn: function() {\n          if (this.get(\'model.playfield.carryCorn\') > 0) {\n            return this.get(\'model.playfield\').decrementProperty(\'carryCorn\');\n          }\n        },\n        load: function() {\n          var fileSelector;\n          fileSelector = Ember.$(\'<input type=\"file\" accept=\"application/javascript\">\');\n          fileSelector.on(\'change\', (function(_this) {\n            return function(evt) {\n              var file, reader;\n              if (evt.target.files.length === 1) {\n                file = evt.target.files[0];\n                reader = new FileReader();\n                reader.onload = function() {\n                  _this.get(\'model\').set(\'scratchpad\', reader.result);\n                  return window.Hub.publish(\'stop\');\n                };\n                reader.onerror = function() {\n                  return window.Hub.publish(\'logHTML\', \'<span class=\"error\">Failed loading document: <em>\' + reader.error.message.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\n/g, \"<br>\") + \'</em></span>\');\n                };\n                return reader.readAsText(file);\n              }\n            };\n          })(this));\n          return fileSelector.click();\n        },\n        save: function() {\n          var saveFilename;\n          saveFilename = localStorage.getItem(\'saveFilename\');\n          if (!saveFilename) {\n            saveFilename = \'scratchpad.js\';\n          }\n          this.set(\'saveFilename\', saveFilename);\n          window.Bootstrap.ModalManager.show(\'SaveDialog\');\n          Ember.run.next(function() {\n            return Ember.$(\'#saveFilename\').focus();\n          });\n          return false;\n        },\n        saveDocumentAndDimiss: function() {\n          window.Bootstrap.ModalManager.hide(\'SaveDialog\');\n          this.send(\'saveDocument\');\n          return false;\n        },\n        saveDocument: function() {\n          var blob, event, save, saveFilename;\n          saveFilename = this.get(\'saveFilename\');\n          if (!saveFilename) {\n            saveFilename = \'scratchpad.js\';\n          } else if (!/\\.js$/.test(saveFilename)) {\n            saveFilename += \'.js\';\n          }\n          this.set(\'saveFilename\', saveFilename);\n          localStorage.setItem(\'saveFilename\', saveFilename);\n          save = document.createElement(\'a\');\n          save.setAttribute(\'download\', saveFilename);\n          blob = new Blob([this.get(\'model.scratchpad\')], {\n            type: \'application/javascript\'\n          });\n          save.href = URL.createObjectURL(blob);\n          event = new MouseEvent(\'click\', {\n            view: window,\n            bubbles: true,\n            cancelable: false\n          });\n          save.dispatchEvent(event);\n          return false;\n        }\n      }\n    });\n\n    __exports__[\"default\"] = IndexController;\n  });//# sourceURL=hamster/controllers/index.js");

;eval("define(\"hamster/controllers/playfield\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var PlayfieldController;\n\n    PlayfieldController = Ember.Controller.extend({\n      init: function() {\n        window.Hub.subscribe(\'hamsterForward\', this.forward.bind(this));\n        window.Hub.subscribe(\'hamsterTurnLeft\', this.turnLeft.bind(this));\n        window.Hub.subscribe(\'hamsterTurnRight\', this.turnRight.bind(this));\n        window.Hub.subscribe(\'hamsterPickUp\', this.pickUp.bind(this));\n        window.Hub.subscribe(\'hamsterGive\', this.give.bind(this));\n        window.Hub.subscribe(\'hamsterCanMoveForward\', this.canMoveForward.bind(this));\n        return window.Hub.subscribe(\'hamsterHasCorn\', this.hasCorn.bind(this));\n      },\n      bricks: (function() {\n        var bricks, grid, line, x, y, _i, _j, _ref, _ref1;\n        grid = this.get(\'model.grid\');\n        bricks = Ember.A();\n        if (!grid) {\n          return bricks;\n        }\n        for (y = _i = 0, _ref = grid.length; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {\n          line = grid[y];\n          for (x = _j = 0, _ref1 = line.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {\n            if (line[x] === \'#\') {\n              bricks.push([x, y]);\n            }\n          }\n        }\n        return bricks;\n      }).property(\'model.grid\'),\n      corn: (function() {\n        var corn, corncount, grid, line, x, y, _i, _j, _ref, _ref1;\n        grid = this.get(\'model.grid\');\n        corn = Ember.A();\n        if (!grid) {\n          return corn;\n        }\n        for (y = _i = 0, _ref = grid.length; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {\n          line = grid[y];\n          for (x = _j = 0, _ref1 = line.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {\n            corncount = parseInt(line[x], 13);\n            if (!isNaN(corncount) && corncount > 0) {\n              corn.push(Ember.Object.create({\n                location: [x, y],\n                count: parseInt(line[x], 13)\n              }));\n            }\n          }\n        }\n        return corn;\n      }).property(\'model.grid\'),\n      playfieldwidth: (function() {\n        if (!this.get(\'model.grid\')) {\n          return 0;\n        }\n        return (1 + this.get(\'model.grid\')[0].length) * 32;\n      }).property(\'model.grid\'),\n      playfieldheight: (function() {\n        if (!this.get(\'model.grid\')) {\n          return 0;\n        }\n        return (1 + this.get(\'model.grid\').length) * 32;\n      }).property(\'model.grid\'),\n      forwardLocation: function() {\n        var hamsterLocation, x, y;\n        hamsterLocation = this.get(\'model.hamsterLocation\');\n        x = hamsterLocation[0];\n        y = hamsterLocation[1];\n        switch (hamsterLocation[2]) {\n          case 0:\n            x++;\n            break;\n          case 90:\n            y++;\n            break;\n          case 180:\n            x--;\n            break;\n          case 270:\n            y--;\n        }\n        return [x, y, hamsterLocation[2]];\n      },\n      forward: function() {\n        var hamsterLocation, x, y;\n        hamsterLocation = this.forwardLocation();\n        x = hamsterLocation[0];\n        y = hamsterLocation[1];\n        if (this.get(\'model.grid\')[y][x] === \'#\') {\n          throw new Error(\"Hit the wall!\");\n        }\n        return this.get(\'model\').set(\'hamsterLocation\', [x, y, hamsterLocation[2]]);\n      },\n      turnLeft: function() {\n        var hamsterLocation;\n        hamsterLocation = Ember.copy(this.get(\'model.hamsterLocation\'), true);\n        if (hamsterLocation[2] > 0) {\n          hamsterLocation[2] = hamsterLocation[2] - 90;\n        } else {\n          hamsterLocation[2] = 270;\n        }\n        return this.get(\'model\').set(\'hamsterLocation\', hamsterLocation);\n      },\n      turnRight: function() {\n        var hamsterLocation;\n        hamsterLocation = Ember.copy(this.get(\'model.hamsterLocation\'), true);\n        if (hamsterLocation[2] < 270) {\n          hamsterLocation[2] = hamsterLocation[2] + 90;\n        } else {\n          hamsterLocation[2] = 0;\n        }\n        return this.get(\'model\').set(\'hamsterLocation\', hamsterLocation);\n      },\n      pickUp: function() {\n        var cornCount, grid, hamsterLocation, line, x, y;\n        hamsterLocation = this.get(\'model.hamsterLocation\');\n        x = hamsterLocation[0];\n        y = hamsterLocation[1];\n        grid = this.get(\'model.grid\');\n        cornCount = parseInt(grid[y][x], 13);\n        if (cornCount > 0) {\n          line = grid[y];\n          if (cornCount === 1) {\n            grid[y] = line.substr(0, x) + \" \" + line.substr(x + 1);\n          } else {\n            grid[y] = line.substr(0, x) + (cornCount - 1).toString(13) + line.substr(x + 1);\n          }\n          this.get(\'model\').incrementProperty(\'carryCorn\');\n          return this.get(\'model\').notifyPropertyChange(\'grid\');\n        } else {\n          throw new Error(\"Tried to pick up corn on an empty field.\");\n        }\n      },\n      give: function() {\n        var cornCount, fieldCorn, grid, hamsterLocation, line, x, y;\n        hamsterLocation = this.get(\'model.hamsterLocation\');\n        x = hamsterLocation[0];\n        y = hamsterLocation[1];\n        grid = this.get(\'model.grid\');\n        cornCount = this.get(\'model.carryCorn\');\n        if (cornCount > 0) {\n          fieldCorn = parseInt(grid[y][x], 13);\n          line = grid[y];\n          if (isNaN(fieldCorn)) {\n            grid[y] = line.substr(0, x) + \"1\" + line.substr(x + 1);\n          } else if (fieldCorn < 12) {\n            grid[y] = line.substr(0, x) + (fieldCorn + 1).toString(13) + line.substr(x + 1);\n          }\n          this.get(\'model\').notifyPropertyChange(\'grid\');\n          return this.get(\'model\').decrementProperty(\'carryCorn\');\n        } else {\n          throw new Error(\"Tried to give corn, but don\'t have any.\");\n        }\n      },\n      hasCorn: function(handler) {\n        var hamsterLocation, x, y;\n        hamsterLocation = this.get(\'model.hamsterLocation\');\n        x = hamsterLocation[0];\n        y = hamsterLocation[1];\n        return handler(!isNaN(parseInt(this.get(\'model.grid\')[y][x], 13)));\n      },\n      canMoveForward: function(handler) {\n        var hamsterLocation, x, y;\n        hamsterLocation = this.forwardLocation();\n        x = hamsterLocation[0];\n        y = hamsterLocation[1];\n        return handler(this.get(\'model.grid\')[y][x] !== \'#\');\n      }\n    });\n\n    __exports__[\"default\"] = PlayfieldController;\n  });//# sourceURL=hamster/controllers/playfield.js");

;eval("define(\"hamster/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: HamsterENV.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'about\');\n      return this.route(\'help\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=hamster/router.js");

;eval("define(\"hamster/routes/about\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var AboutRoute;\n\n    AboutRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = AboutRoute;\n  });//# sourceURL=hamster/routes/about.js");

;eval("define(\"hamster/routes/help\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var HelpRoute;\n\n    HelpRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = HelpRoute;\n  });//# sourceURL=hamster/routes/help.js");

;eval("define(\"hamster/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      model: function() {\n        var carryCorn, editorSplitview, grid, hamsterLocation, logLines, mainSplitview, playfieldSplitview, runSpeed, scratchpad;\n        scratchpad = localStorage.getItem(\'scratchpad\');\n        if (!scratchpad) {\n          scratchpad = \"\\n\\n\\n\";\n        }\n        grid = localStorage.getItem(\'grid\');\n        if (!grid) {\n          grid = [\'###\', \'# #\', \'###\'];\n        } else {\n          grid = grid.split(\'\\n\');\n        }\n        hamsterLocation = localStorage.getItem(\'hamsterLocation\');\n        if (!hamsterLocation) {\n          hamsterLocation = [1, 1, 0];\n        } else {\n          hamsterLocation = hamsterLocation.split(\',\').map(function(num) {\n            return parseInt(num);\n          });\n        }\n        carryCorn = parseInt(localStorage.getItem(\'carryCorn\'));\n        if (!carryCorn) {\n          carryCorn = 0;\n        }\n        logLines = localStorage.getItem(\'logLines\');\n        if (!logLines) {\n          logLines = Ember.A();\n        } else {\n          logLines = JSON.parse(logLines);\n        }\n        runSpeed = localStorage.getItem(\'runSpeed\');\n        if (!runSpeed) {\n          runSpeed = 500;\n        } else {\n          runSpeed = parseInt(runSpeed);\n        }\n        mainSplitview = localStorage.getItem(\'mainSplitview\');\n        if (!mainSplitview) {\n          mainSplitview = 50;\n        } else {\n          mainSplitview = parseInt(mainSplitview);\n        }\n        mainSplitview = localStorage.getItem(\'mainSplitview\');\n        if (!mainSplitview) {\n          mainSplitview = 50;\n        } else {\n          mainSplitview = parseInt(mainSplitview);\n        }\n        editorSplitview = localStorage.getItem(\'editorSplitview\');\n        if (!editorSplitview) {\n          editorSplitview = 75;\n        } else {\n          editorSplitview = parseInt(editorSplitview);\n        }\n        playfieldSplitview = localStorage.getItem(\'playfieldSplitview\');\n        if (!playfieldSplitview) {\n          playfieldSplitview = 75;\n        } else {\n          playfieldSplitview = parseInt(playfieldSplitview);\n        }\n        return Ember.Object.create({\n          scratchpad: scratchpad,\n          logLines: logLines,\n          runSpeed: runSpeed,\n          playMode: false,\n          mainSplitview: mainSplitview,\n          editorSplitview: editorSplitview,\n          playfieldSplitview: playfieldSplitview,\n          playfield: Ember.Object.create({\n            grid: grid,\n            hamsterLocation: hamsterLocation,\n            carryCorn: carryCorn\n          }),\n          playfieldTemplates: [\n            {\n              name: \"Task 1\",\n              grid: [\"####################\", \"#           #      #\", \"#     1 #   ###### #\", \"#### #  #  1#11111 #\", \"#   1 1     ###### #\", \"#  ### ######      #\", \"#11#               #\", \"####################\"],\n              hamsterLocation: [4, 2, 90],\n              carryCorn: 0\n            }, {\n              name: \"Task 2\",\n              grid: [\"########\", \"#      #\", \"#  11  #\", \"#  ### #\", \"#      #\", \"########\"],\n              hamsterLocation: [2, 3, 90],\n              carryCorn: 4\n            }, {\n              name: \"Task 3\",\n              grid: [\"#############\", \"#           #\", \"#           #\", \"#      #    #\", \"#     ###   #\", \"#    #####  #\", \"#   ####### #\", \"#############\"],\n              hamsterLocation: [2, 6, 0],\n              carryCorn: 0\n            }, {\n              name: \"Task 4\",\n              grid: [\"########\", \"# 222  #\", \"# ###  #\", \"# 222  #\", \"#      #\", \"########\"],\n              hamsterLocation: [1, 2, 90],\n              carryCorn: 0\n            }, {\n              name: \"Task 5\",\n              grid: [\"########\", \"#  #   #\", \"#   #  #\", \"#    # #\", \"########\"],\n              hamsterLocation: [6, 1, 90],\n              carryCorn: 6\n            }, {\n              name: \"Task 6\",\n              grid: [\"########\", \"#      #\", \"# #### #\", \"# # 1# #\", \"# # ## #\", \"# #    #\", \"# ######\", \"#      #\", \"########\"],\n              hamsterLocation: [6, 7, 180],\n              carryCorn: 0\n            }, {\n              name: \"Task 7\",\n              grid: [\"#####################\", \"   1 1111111   11 11#\", \"#1 1 1   1   1  1   #\", \"#1 1 1 1 1 111 11 1 #\", \"#1     1 1     11 1 #\", \"#  11111     111  1 #\", \"# 11   111 111 1 11 #\", \"#    1           11  \", \"#####################\"],\n              hamsterLocation: [0, 1, 0],\n              carryCorn: 0\n            }, {\n              name: \"Task 8\",\n              grid: [\"##############\", \"#            #\", \"#     #      #\", \"#1#   #1 #1  #\", \"#### #########\", \"#### #########\", \"####         #\", \"##############\"],\n              hamsterLocation: [11, 6, 180],\n              carryCorn: 0\n            }, {\n              name: \"Task 9\",\n              grid: [\"#####################\", \"#1111111111111111111#\", \"#1111 111111111 1111#\", \"#111 1 1111111 1 111#\", \"#11 111 11111 111 11#\", \"#1 11 11 111 11 11 1#\", \"# 11 1 11 1 11 1 11 #\", \"#1 11 11 111 11 11 1#\", \"#11 111 11111 111 11#\", \"#111 1 1111111 1 111#\", \"#1111 111111111 1111#\", \"#1111111111111111111#\", \"#####################\"],\n              hamsterLocation: [1, 1, 0],\n              carryCorn: 50\n            }, {\n              name: \"Task 10\",\n              grid: [\"#####################\", \"#                   #\", \"#               #   #\", \"# 11111        #1#  #\", \"#     11      #111# #\", \"#      1   11111111##\", \"#      1   1  #111# #\", \"#      1  11   #1#  #\", \"#      1111     #   #\", \"#####################\"],\n              hamsterLocation: [1, 3, 0],\n              carryCorn: 0\n            }, {\n              name: \"Task 11\",\n              grid: [\"##########\", \"#        #\", \"##########\"],\n              hamsterLocation: [1, 1, 0],\n              carryCorn: 0\n            }, {\n              name: \"Task 12\",\n              grid: [\"##########\", \"#   1 1  #\", \"##########\"],\n              hamsterLocation: [1, 1, 0],\n              carryCorn: 8\n            }, {\n              name: \"Task 13\",\n              grid: [\"#########\", \"#### ####\", \"#### ####\", \"#       #\", \"#### ####\", \"#### ####\", \"#### ####\", \"#### ####\", \"#########\"],\n              hamsterLocation: [4, 3, 0],\n              carryCorn: 1\n            }, {\n              name: \"Task 14\",\n              grid: [\"#################\", \"#   #   #   #   #\", \"# # # # # # # ###\", \"# # # # # ### ###\", \"# # # ### ### ###\", \"# ### ### ### ###\", \"# ### ### ### ###\", \"# ### ### ### ###\", \"#               #\", \"#################\"],\n              hamsterLocation: [15, 8, 180],\n              carryCorn: 4\n            }, {\n              name: \"Task 15\",\n              grid: [\"#########\", \"#       #\", \"# 1#1#1 #\", \"# ##### #\", \"# 1###1 #\", \"# ##### #\", \"# 1#1#1 #\", \"#       #\", \"#########\"],\n              hamsterLocation: [1, 1, 0],\n              carryCorn: 0\n            }, {\n              name: \"Empty 20x5\",\n              grid: [\"####################\", \"#                  #\", \"#                  #\", \"#                  #\", \"#                  #\", \"#                  #\", \"####################\"],\n              hamsterLocation: [1, 1, 0],\n              carryCorn: 100\n            }\n          ]\n        });\n      },\n      renderTemplate: function(controller, model) {\n        var consoleC, editor;\n        this._super(controller, model);\n        editor = this.container.lookup(\'controller:editor\');\n        editor.set(\'model\', model);\n        editor.setup();\n        this.render(\'editor\', {\n          outlet: \'editor\',\n          into: \'index\',\n          controller: editor\n        });\n        consoleC = this.container.lookup(\'controller:console\');\n        consoleC.set(\'model\', model);\n        consoleC.setup();\n        return this.render(\'console\', {\n          outlet: \'console\',\n          into: \'index\',\n          controller: consoleC\n        });\n      }\n    });\n\n    __exports__[\"default\"] = IndexRoute;\n  });//# sourceURL=hamster/routes/index.js");

;eval("define(\"hamster/templates/about\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/about.js");

;eval("define(\"hamster/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Hamster\");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Home\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Help\");\n      }\n\n      data.buffer.push(\"<div class=\\\"navbar navbar-inverse navbar-fixed-top\\\" role=\\\"navigation\\\">\\n	<div class=\\\"container\\\">\\n		<div class=\\\"navbar-header\\\">\\n			<button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\n				<span class=\\\"sr-only\\\">Toggle navigation</span>\\n				<span class=\\\"icon-bar\\\"></span>\\n				<span class=\\\"icon-bar\\\"></span>\\n				<span class=\\\"icon-bar\\\"></span>\\n			</button>\\n			\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"navbar-brand\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n		<div class=\\\"collapse navbar-collapse\\\">\\n			<ul class=\\\"nav navbar-nav\\\">\\n				<li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n				<li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"help\", options) : helperMissing.call(depth0, \"link-to\", \"help\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n			</ul>\\n			<p class=\\\"navbar-right navbar-text\\\">©2014 <a href=\\\"http://monitzer.com\\\">Andreas Monitzer</a></p>\\n		</div>\\n	</div>\\n</div>\\n\\n<div class=\\\"hamster container\\\">\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/application.js");

;eval("define(\"hamster/templates/components/ace-editor\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/components/ace-editor.js");

;eval("define(\"hamster/templates/console\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n	<p>\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</p>\\n\");\n      return buffer;\n      }\n\n      stack1 = helpers.each.call(depth0, \"model.logLines\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/console.js");

;eval("define(\"hamster/templates/editor\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'ace-editor\'] || (depth0 && depth0[\'ace-editor\']),options={hash:{\n        \'content\': (\"model.scratchpad\"),\n        \'cursorPosition\': (\"cursorPosition\"),\n        \'selection\': (\"selection\"),\n        \'highlightRange\': (\"highlightRange\"),\n        \'readonly\': (\"running\")\n      },hashTypes:{\'content\': \"ID\",\'cursorPosition\': \"ID\",\'selection\': \"ID\",\'highlightRange\': \"ID\",\'readonly\': \"ID\"},hashContexts:{\'content\': depth0,\'cursorPosition\': depth0,\'selection\': depth0,\'highlightRange\': depth0,\'readonly\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"ace-editor\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/editor.js");

;eval("define(\"hamster/templates/help\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h1 class=\\\"E\\\">Vorgegebene Methoden im Hamster-Simulator</h1>\\r\\n<p>In einem Programm des Hamster Simulators k&ouml;nnen folgende\\r\\n  Methoden (Befehle/Prozeduren) direkt benutzt werden:</p>\\r\\n<table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"2\\\">\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\" width=\\\"70\\\"><b>vor();</b></td>\\r\\n    <td width=\\\"*\\\">der Hamster geht ein Feld (eine Kachel) in Blickrichtung vorw&auml;rts</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\"><b>linksUm();</b></td>\\r\\n    <td>der Hamster dreht sich um 90&deg; nach links</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\"><b>rechtsUm();</b></td>\\r\\n    <td>der Hamster dreht sich um 90&deg; nach rechts</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\"><b>nimm();</b></td>\\r\\n    <td>der Hamster nimmt ein Korn von der Kachel, auf der er gerade steht, in\\r\\n      sein Maul</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\"><b>gib();</b></td>\\r\\n    <td>der Hamster l&auml;sst ein Korn aus seinem Maul auf die Kachel des Territoriums\\r\\n      fallen, auf der er gerade steht</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<p>Neben diesen direkt verwendbaren Befehlen k&ouml;nnen folgende Methoden (Funktionen)\\r\\n  zur &Uuml;berpr&uuml;fung in Kontrollstrukturen benutzt werden:</p>\\r\\n<table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"2\\\">\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\" width=\\\"80\\\"><b>vornFrei()</b></td>\\r\\n    <td width=\\\"*\\\">liefert den Wahrheitswert true oder false, je nachdem, ob vor\\r\\n      dem Hamster noch ein freies Feld (ohne Mauer) ist</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\"><b>kornDa()</b></td>\\r\\n    <td>liefert den Wahrheitswert true oder false, je nachdem, ob auf dem Feld\\r\\n      des Hamsters (noch) ein Korn liegt</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td valign=\\\"top\\\"><b>maulLeer()</b></td>\\r\\n    <td>liefert den Wahrheitswert true oder false, je nachdem, ob das Maul des\\r\\n      Hamsters leer ist oder nicht</td>\\r\\n  </tr>\\r\\n</table>\\r\\n<p>Die Kontrolle kann z.B. &uuml;ber eine bedingte Verzweigung erfolgen: &nbsp;&nbsp;if\\r\\n  (vornFrei()) vor();<br>\\r\\n  In diesem Fall geht der Hamster nur eine Kachel vorw&auml;rts, wenn dort &uuml;berhaupt\\r\\n  eine ist und sich auf der Kachel auch keine Mauer befindet.</p>\\r\\r<p>Weitere Methoden:</p>\\r<table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"2\\\">\\r  <tr>\\r    <td valign=\\\"top\\\" width=\\\"150\\\"><b>schreib(</b><i>Text</i><b>);</b></td>\\r    <td width=\\\"*\\\">Gibt den angegebenen Text in dem Konsolenfenster aus. Wenn eine andere Art von Variable angegeben wird, wird diese vorher in Text umgewandelt.</td>\\r  </tr>\\r</table>\\r\");\n      \n    });\n  });//# sourceURL=hamster/templates/help.js");

;eval("define(\"hamster/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n	\");\n      options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}\n      if (helper = helpers[\'split-child\']) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0[\'split-child\']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers[\'split-child\']) { stack1 = blockHelperMissing.call(depth0, \'split-child\', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data}); }\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n	\");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"compositeRight\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(8, program8, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n		\");\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (false),\n        \'class\': (\"hamster-textpart\"),\n        \'splitPercentage\': (\"model.editorSplitview\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\",\'splitPercentage\': \"ID\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0,\'splitPercentage\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n			\");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n			\");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child variables-wrapper\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"editor\", options) : helperMissing.call(depth0, \"outlet\", \"editor\", options))));\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n				\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"variables\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n		\");\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (false),\n        \'class\': (\"hamster-runtime\"),\n        \'splitPercentage\': (\"model.playfieldSplitview\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\",\'splitPercentage\': \"ID\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0,\'splitPercentage\': depth0},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\");\n      return buffer;\n      }\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n			\");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"stage\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n			\");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"console-wrapper child\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(33, program33, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n				<div class=\\\"toolbar\\\">\\n					<div class=\\\"btn-group\\\">\\n						<div class=\\\"btn cornCount\\\"><img src=\\\"images/hamsterkorn24.png\\\" alt=\\\"Corn\\\"> \");\n      stack1 = helpers._triageMustache.call(depth0, \"model.playfield.carryCorn\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							<div class=\\\"btn-group-xs btn-group-vertical\\\">\\n								\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'title\': (\"+\"),\n        \'class\': (\"btn\"),\n        \'clicked\': (\"addCorn\")\n      },hashTypes:{\'title\': \"STRING\",\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'title\': depth0,\'class\': depth0,\'clicked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options))));\n      data.buffer.push(\"\\n								\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'title\': (\"-\"),\n        \'class\': (\"btn\"),\n        \'clicked\': (\"removeCorn\")\n      },hashTypes:{\'title\': \"STRING\",\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'title\': depth0,\'class\': depth0,\'clicked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options))));\n      data.buffer.push(\"\\n							</div>\\n						</div>\\n					</div>\\n					<div class=\\\"btn-group\\\">\\n						\");\n      stack1 = helpers[\'if\'].call(depth0, \"model.playMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(11, program11, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn\"),\n        \'clicked\': (\"reset\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(17, program17, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn\"),\n        \'clicked\': (\"stepIn\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(19, program19, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn\"),\n        \'clicked\': (\"stepOver\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(21, program21, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					</div>\\n					<div class=\\\"btn-group\\\">\\n						\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn\"),\n        \'clicked\': (\"rotate\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(23, program23, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n						<div class=\\\"btn-group\\\">\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"switchPlayfield btn dropdown-toggle\"),\n        \'data-toggle\': (\"dropdown\")\n      },hashTypes:{\'class\': \"STRING\",\'data-toggle\': \"STRING\"},hashContexts:{\'class\': depth0,\'data-toggle\': depth0},inverse:self.noop,fn:self.program(25, program25, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						<ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n							\");\n      stack1 = helpers.each.call(depth0, \"model.playfieldTemplates\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						</ul>\\n						</div>\\n					</div>\\n					<div class=\\\"btn-group\\\">\\n						\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn\"),\n        \'clicked\': (\"load\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(29, program29, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn\"),\n        \'clicked\': (\"save\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(31, program31, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					</div>\\n					<div class=\\\"btn-group runSpeedSliderWrapper\\\">\\n						<span class=\\\"runSpeedSliderLabel\\\">Speed:</span> \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'class\': (\"runSpeedSlider\")\n      },hashTypes:{\'type\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'type\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n					</div>\\n				</div>\\n				<div class=\\\"playfield-container\\\">\\n					\");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"Playfield\", \"model.playfield\", options) : helperMissing.call(depth0, \"render\", \"Playfield\", \"model.playfield\", options))));\n      data.buffer.push(\"\\n				</div>\\n			\");\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n							\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn btn-default\"),\n        \'clicked\': (\"pause\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(12, program12, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/pause.png\\\" alt=\\\"Pause\\\" title=\\\"Pause\\\">\");\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n							\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"btn btn-default\"),\n        \'clicked\': (\"play\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(15, program15, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/play.png\\\" alt=\\\"Play\\\" title=\\\"Play\\\">\");\n      }\n\n    function program17(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/delete.png\\\" alt=\\\"Reset\\\" title=\\\"Reset\\\">\");\n      }\n\n    function program19(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/stepin.png\\\" alt=\\\"Step In\\\" title=\\\"Step In\\\">\");\n      }\n\n    function program21(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/stepover.png\\\" alt=\\\"Step Over\\\" title=\\\"Step Over\\\">\");\n      }\n\n    function program23(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/rotate.png\\\" alt=\\\"Rotate\\\" title=\\\"Rotate Hamster\\\">\");\n      }\n\n    function program25(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/choose.png\\\" alt=\\\"Switch Playfield\\\" title=\\\"Switch Playfield\\\">\");\n      }\n\n    function program27(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n							<li class=\\\"menuitem\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"selectTemplate\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></li>\\n							\");\n      return buffer;\n      }\n\n    function program29(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/load.png\\\" alt=\\\"Load Document\\\" title=\\\"Load Document\\\">\");\n      }\n\n    function program31(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/save.png\\\" alt=\\\"Save Document\\\" title=\\\"Save Document\\\">\");\n      }\n\n    function program33(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n				<div class=\\\"consoleScroller\\\">\\n					\");\n      data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"console\", options) : helperMissing.call(depth0, \"outlet\", \"console\", options))));\n      data.buffer.push(\"\\n				</div>\\n				\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'class\': (\"clearConsoleButton\"),\n        \'clicked\': (\"clearConsole\")\n      },hashTypes:{\'class\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'class\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(34, program34, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program34(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"icons/delete.png\\\" alt=\\\"Clear\\\" title=\\\"Clear Console\\\">\");\n      }\n\n    function program36(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n<form class=\\\"form-horizontal\\\" role=\\\"form\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveDocumentAndDimiss\", {hash:{\n        \'on\': (\"submit\"),\n        \'bubbles\': (false)\n      },hashTypes:{\'on\': \"STRING\",\'bubbles\': \"BOOLEAN\"},hashContexts:{\'on\': depth0,\'bubbles\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n	<div class=\\\"form-group\\\">\\n		<label for=\\\"saveFilename\\\" class=\\\"col-sm-4 control-label\\\">File Name:</label>\\n		<div class=\\\"col-sm-8\\\">\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'class\': (\"form-control\"),\n        \'id\': (\"saveFilename\"),\n        \'placeholder\': (\"example.js\"),\n        \'value\': (\"saveFilename\")\n      },hashTypes:{\'type\': \"STRING\",\'class\': \"STRING\",\'id\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'type\': depth0,\'class\': depth0,\'id\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n		</div>\\n	</div>\\n</form>\\n\");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (true),\n        \'class\': (\"hamster-view\"),\n        \'splitPercentage\': (\"model.mainSplitview\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\",\'splitPercentage\': \"ID\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0,\'splitPercentage\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = (helper = helpers[\'bs-modal\'] || (depth0 && depth0[\'bs-modal\']),options={hash:{\n        \'name\': (\"SaveDialog\"),\n        \'fade\': (true),\n        \'footerButtonsBinding\': (\"saveDialogButtons\"),\n        \'title\': (\"Save Document\")\n      },hashTypes:{\'name\': \"STRING\",\'fade\': \"BOOLEAN\",\'footerButtonsBinding\': \"STRING\",\'title\': \"STRING\"},hashContexts:{\'name\': depth0,\'fade\': depth0,\'footerButtonsBinding\': depth0,\'title\': depth0},inverse:self.noop,fn:self.program(36, program36, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-modal\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/index.js");

;eval("define(\"hamster/templates/playfield\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"brick\", {hash:{\n        \'location\': (\"\")\n      },hashTypes:{\'location\': \"ID\"},hashContexts:{\'location\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"corn\", {hash:{\n        \'location\': (\"location\"),\n        \'corncount\': (\"count\")\n      },hashTypes:{\'location\': \"ID\",\'corncount\': \"ID\"},hashContexts:{\'location\': depth0,\'corncount\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"playfield_hamster playfield_cell\\\"></div>\\n\");\n      stack1 = helpers.each.call(depth0, \"bricks\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      stack1 = helpers.each.call(depth0, \"corn\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/playfield.js");

;eval("define(\"hamster/templates/variables\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			<tr class=\\\"variables-table\\\"><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td></tr>\\n		\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<table class=\\\"variables-table\\\">\\n	<thead class=\\\"variables-table\\\">\\n		<tr><th>Variable</th><th>Content</th></tr>\\n	</thead>\\n	<tbody>\\n		\");\n      stack1 = helpers.each.call(depth0, \"model.variables\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</tbody>\\n</table>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=hamster/templates/variables.js");

;eval("define(\"hamster/tests/hamster/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster\');\n    test(\'hamster/app.js should pass jshint\', function() { \n      ok(true, \'hamster/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/app.jshint.js");

;eval("define(\"hamster/tests/hamster/components/ace-editor.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/components\');\n    test(\'hamster/components/ace-editor.js should pass jshint\', function() { \n      ok(true, \'hamster/components/ace-editor.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/components/ace-editor.jshint.js");

;eval("define(\"hamster/tests/hamster/components/split-child.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/components\');\n    test(\'hamster/components/split-child.js should pass jshint\', function() { \n      ok(true, \'hamster/components/split-child.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/components/split-child.jshint.js");

;eval("define(\"hamster/tests/hamster/components/split-sash.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/components\');\n    test(\'hamster/components/split-sash.js should pass jshint\', function() { \n      ok(true, \'hamster/components/split-sash.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/components/split-sash.jshint.js");

;eval("define(\"hamster/tests/hamster/components/split-view.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/components\');\n    test(\'hamster/components/split-view.js should pass jshint\', function() { \n      ok(true, \'hamster/components/split-view.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/components/split-view.jshint.js");

;eval("define(\"hamster/tests/hamster/controllers/console.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/controllers\');\n    test(\'hamster/controllers/console.js should pass jshint\', function() { \n      ok(true, \'hamster/controllers/console.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/controllers/console.jshint.js");

;eval("define(\"hamster/tests/hamster/controllers/editor.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/controllers\');\n    test(\'hamster/controllers/editor.js should pass jshint\', function() { \n      ok(true, \'hamster/controllers/editor.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/controllers/editor.jshint.js");

;eval("define(\"hamster/tests/hamster/controllers/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/controllers\');\n    test(\'hamster/controllers/index.js should pass jshint\', function() { \n      ok(true, \'hamster/controllers/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/controllers/index.jshint.js");

;eval("define(\"hamster/tests/hamster/controllers/playfield.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/controllers\');\n    test(\'hamster/controllers/playfield.js should pass jshint\', function() { \n      ok(true, \'hamster/controllers/playfield.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/controllers/playfield.jshint.js");

;eval("define(\"hamster/tests/hamster/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster\');\n    test(\'hamster/router.js should pass jshint\', function() { \n      ok(true, \'hamster/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/router.jshint.js");

;eval("define(\"hamster/tests/hamster/routes/about.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/routes\');\n    test(\'hamster/routes/about.js should pass jshint\', function() { \n      ok(true, \'hamster/routes/about.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/routes/about.jshint.js");

;eval("define(\"hamster/tests/hamster/routes/help.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/routes\');\n    test(\'hamster/routes/help.js should pass jshint\', function() { \n      ok(true, \'hamster/routes/help.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/routes/help.jshint.js");

;eval("define(\"hamster/tests/hamster/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/routes\');\n    test(\'hamster/routes/index.js should pass jshint\', function() { \n      ok(true, \'hamster/routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/routes/index.jshint.js");

;eval("define(\"hamster/tests/hamster/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/tests/helpers\');\n    test(\'hamster/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'hamster/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/tests/helpers/resolver.jshint.js");

;eval("define(\"hamster/tests/hamster/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/tests/helpers\');\n    test(\'hamster/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'hamster/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/tests/helpers/start-app.jshint.js");

;eval("define(\"hamster/tests/hamster/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/tests\');\n    test(\'hamster/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'hamster/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/tests/test-helper.jshint.js");

;eval("define(\"hamster/tests/hamster/views/brick.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/views\');\n    test(\'hamster/views/brick.js should pass jshint\', function() { \n      ok(true, \'hamster/views/brick.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/views/brick.jshint.js");

;eval("define(\"hamster/tests/hamster/views/console.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/views\');\n    test(\'hamster/views/console.js should pass jshint\', function() { \n      ok(true, \'hamster/views/console.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/views/console.jshint.js");

;eval("define(\"hamster/tests/hamster/views/corn.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/views\');\n    test(\'hamster/views/corn.js should pass jshint\', function() { \n      ok(true, \'hamster/views/corn.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/views/corn.jshint.js");

;eval("define(\"hamster/tests/hamster/views/editor.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/views\');\n    test(\'hamster/views/editor.js should pass jshint\', function() { \n      ok(true, \'hamster/views/editor.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/views/editor.jshint.js");

;eval("define(\"hamster/tests/hamster/views/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/views\');\n    test(\'hamster/views/index.js should pass jshint\', function() { \n      ok(true, \'hamster/views/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/views/index.jshint.js");

;eval("define(\"hamster/tests/hamster/views/playfield.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/views\');\n    test(\'hamster/views/playfield.js should pass jshint\', function() { \n      ok(true, \'hamster/views/playfield.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/views/playfield.jshint.js");

;eval("define(\"hamster/tests/hamster/views/variables.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - hamster/views\');\n    test(\'hamster/views/variables.js should pass jshint\', function() { \n      ok(true, \'hamster/views/variables.js should pass jshint.\'); \n    });\n  });//# sourceURL=hamster/tests/hamster/views/variables.jshint.js");

;eval("define(\"hamster/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'hamster\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=hamster/tests/helpers/resolver.js");

;eval("define(\"hamster/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'hamster/app\')[\'default\'];\n    var Router = require(\'hamster/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=hamster/tests/helpers/start-app.js");

;eval("define(\"hamster/tests/test-helper\", \n  [\"hamster/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=hamster/tests/test-helper.js");

;eval("define(\"hamster/tests/unit/components/ace-editor-component-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\'ace-editor-component\', \'AceEditorComponentComponent\', {});\n\n    test(\'it renders\', function() {\n      var component;\n      expect(2);\n      component = this.subject();\n      equal(component.state, \'preRender\');\n      this.append();\n      return equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=hamster/tests/unit/components/ace-editor-component-test.js");

;eval("define(\"hamster/tests/unit/components/ace-editor-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\'ace-editor\', \'AceEditorComponent\', {});\n\n    test(\'it renders\', function() {\n      var component;\n      expect(2);\n      component = this.subject();\n      equal(component.state, \'preRender\');\n      this.append();\n      return equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=hamster/tests/unit/components/ace-editor-test.js");

;eval("define(\"hamster/tests/unit/controllers/console-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:console\', \'ConsoleController\', {});\n\n    test(\'it exists\', function() {\n      var controller;\n      controller = this.subject();\n      return ok(controller);\n    });\n  });//# sourceURL=hamster/tests/unit/controllers/console-test.js");

;eval("define(\"hamster/tests/unit/controllers/editor-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:editor\', \'EditorController\', {});\n\n    test(\'it exists\', function() {\n      var controller;\n      controller = this.subject();\n      return ok(controller);\n    });\n  });//# sourceURL=hamster/tests/unit/controllers/editor-test.js");

;eval("define(\"hamster/tests/unit/controllers/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:index\', \'IndexController\', {});\n\n    test(\'it exists\', function() {\n      var controller;\n      controller = this.subject();\n      return ok(controller);\n    });\n  });//# sourceURL=hamster/tests/unit/controllers/index-test.js");

;eval("define(\"hamster/tests/unit/controllers/playfield-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:playfield\', \'PlayfieldController\', {});\n\n    test(\'it exists\', function() {\n      var controller;\n      controller = this.subject();\n      return ok(controller);\n    });\n  });//# sourceURL=hamster/tests/unit/controllers/playfield-test.js");

;eval("define(\"hamster/tests/unit/routes/about-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:about\', \'AboutRoute\', {});\n\n    test(\'it exists\', function() {\n      var route;\n      route = this.subject();\n      return ok(route);\n    });\n  });//# sourceURL=hamster/tests/unit/routes/about-test.js");

;eval("define(\"hamster/tests/unit/routes/help-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:help\', \'HelpRoute\', {});\n\n    test(\'it exists\', function() {\n      var route;\n      route = this.subject();\n      return ok(route);\n    });\n  });//# sourceURL=hamster/tests/unit/routes/help-test.js");

;eval("define(\"hamster/tests/unit/routes/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:index\', \'IndexRoute\', {});\n\n    test(\'it exists\', function() {\n      var route;\n      route = this.subject();\n      return ok(route);\n    });\n  });//# sourceURL=hamster/tests/unit/routes/index-test.js");

;eval("define(\"hamster/tests/unit/views/brick-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:brick\', \'BrickView\');\n\n    test(\'it exists\', function() {\n      return ok(this.subject());\n    });\n  });//# sourceURL=hamster/tests/unit/views/brick-test.js");

;eval("define(\"hamster/tests/unit/views/console-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:console\', \'ConsoleView\');\n\n    test(\'it exists\', function() {\n      return ok(this.subject());\n    });\n  });//# sourceURL=hamster/tests/unit/views/console-test.js");

;eval("define(\"hamster/tests/unit/views/corn-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:corn\', \'CornView\');\n\n    test(\'it exists\', function() {\n      return ok(this.subject());\n    });\n  });//# sourceURL=hamster/tests/unit/views/corn-test.js");

;eval("define(\"hamster/tests/unit/views/editor-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:editor\', \'EditorView\');\n\n    test(\'it exists\', function() {\n      return ok(this.subject());\n    });\n  });//# sourceURL=hamster/tests/unit/views/editor-test.js");

;eval("define(\"hamster/tests/unit/views/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:index\', \'IndexView\');\n\n    test(\'it exists\', function() {\n      return ok(this.subject());\n    });\n  });//# sourceURL=hamster/tests/unit/views/index-test.js");

;eval("define(\"hamster/tests/unit/views/playfield-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:playfield\', \'PlayfieldView\');\n\n    test(\'it exists\', function() {\n      return ok(this.subject());\n    });\n  });//# sourceURL=hamster/tests/unit/views/playfield-test.js");

;eval("define(\"hamster/tests/unit/views/variables-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:variables\', \'VariablesView\');\n\n    test(\'it exists\', function() {\n      return ok(this.subject());\n    });\n  });//# sourceURL=hamster/tests/unit/views/variables-test.js");

;eval("define(\"hamster/views/brick\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var BrickView;\n\n    BrickView = Ember.View.extend({\n      classNames: [\'playfield_brick\', \'playfield_cell\'],\n      didInsertElement: (function() {\n        var div, location, transform;\n        location = this.get(\'location\');\n        div = Ember.$(\'#\' + this.elementId);\n        transform = \'translate(\' + (location[0] * 32 + 16) + \'px, \' + (location[1] * 32 + 16) + \'px)\';\n        div.css(\'transform\', transform);\n        div.css(\'-webkit-transform\', transform);\n        div.css(\'-moz-transform\', transform);\n        div.css(\'-o-transform\', transform);\n        return div.css(\'-ms-transform\', transform);\n      }).observes(\'location\')\n    });\n\n    __exports__[\"default\"] = BrickView;\n  });//# sourceURL=hamster/views/brick.js");

;eval("define(\"hamster/views/console\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ConsoleView;\n\n    ConsoleView = Ember.View.extend({\n      classNames: [\"console\"]\n    });\n\n    __exports__[\"default\"] = ConsoleView;\n  });//# sourceURL=hamster/views/console.js");

;eval("define(\"hamster/views/corn\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var CornView;\n\n    CornView = Ember.View.extend({\n      corncount: 1,\n      didInsertElement: (function() {\n        var div, location, transform;\n        location = this.get(\'location\');\n        div = Ember.$(\'#\' + this.elementId);\n        div.attr(\'class\', \'playfield_corn\' + this.get(\'corncount\') + \' playfield_cell\');\n        transform = \'translate(\' + (location[0] * 32 + 16) + \'px, \' + (location[1] * 32 + 16) + \'px)\';\n        div.css(\'transform\', transform);\n        div.css(\'-webkit-transform\', transform);\n        div.css(\'-moz-transform\', transform);\n        div.css(\'-o-transform\', transform);\n        return div.css(\'-ms-transform\', transform);\n      }).observes(\'location\')\n    });\n\n    __exports__[\"default\"] = CornView;\n  });//# sourceURL=hamster/views/corn.js");

;eval("define(\"hamster/views/editor\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var EditorView;\n\n    EditorView = Ember.View.extend({\n      classNames: [\'hamster-editor\']\n    });\n\n    __exports__[\"default\"] = EditorView;\n  });//# sourceURL=hamster/views/editor.js");

;eval("define(\"hamster/views/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var IndexView;\n\n    IndexView = Ember.View.extend({\n      templateName: \'index\',\n      didInsertElement: function() {\n        var slider;\n        this._super();\n        return slider = Ember.$(\'.runSpeedSlider\').slider({\n          min: 0,\n          max: 2000,\n          value: this.get(\'controller.model.runSpeed\'),\n          formater: function(val) {\n            return Math.round(val / 100) / 10 + \" s\";\n          }\n        }).on(\'slide\', (function(_this) {\n          return function() {\n            var value;\n            value = slider.data(\'slider\').getValue();\n            return _this.get(\'controller.model\').set(\'runSpeed\', value);\n          };\n        })(this));\n      }\n    });\n\n    __exports__[\"default\"] = IndexView;\n  });//# sourceURL=hamster/views/index.js");

;eval("define(\"hamster/views/playfield\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var PlayfieldView;\n\n    PlayfieldView = Ember.View.extend({\n      classNames: [\"playfield\"],\n      updateHamsterPosition: (function() {\n        var hamster, pos, transform;\n        hamster = Ember.$(\'.playfield_hamster\');\n        pos = this.get(\'controller.model.hamsterLocation\');\n        if (!pos) {\n          return;\n        }\n        transform = \'translate(\' + (pos[0] * 32 + 16) + \'px, \' + (pos[1] * 32 + 16) + \'px) rotate(\' + pos[2] + \'deg)\';\n        hamster.css(\'transform\', transform);\n        hamster.css(\'-webkit-transform\', transform);\n        hamster.css(\'-moz-transform\', transform);\n        hamster.css(\'-o-transform\', transform);\n        return hamster.css(\'-ms-transform\', transform);\n      }).observes(\'controller.model.hamsterLocation\'),\n      didInsertElement: (function() {\n        this.updateHamsterPosition();\n        Ember.$(\'#\' + this.elementId).css(\'width\', this.get(\'controller.playfieldwidth\'));\n        return Ember.$(\'#\' + this.elementId).css(\'height\', this.get(\'controller.playfieldheight\'));\n      }).observes(\'controller.playfieldwidth\', \'controller.playfieldheight\')\n    });\n\n    __exports__[\"default\"] = PlayfieldView;\n  });//# sourceURL=hamster/views/playfield.js");

;eval("define(\"hamster/views/variables\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var VariablesView;\n\n    VariablesView = Ember.View.extend({\n      classNames: [\"variables\"],\n      templateName: \'variables\'\n    });\n\n    __exports__[\"default\"] = VariablesView;\n  });//# sourceURL=hamster/views/variables.js");
